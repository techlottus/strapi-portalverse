const env = require('dotenv').config().parsed

module.exports = ({
  apps: [
    {
      name: env.NAME1,
      script: env.SCRIPT,
      args: env.ARGS,
      env: {
        NODE_ENV: env.NAME1,
        HOST_PORT: env.HOST_PORT_TEST1,
        DATABASE_HOST_PRODUCTION: env.DATABASE_HOST_PRODUCTION1, 
        DATABASE_PORT_PRODUCTION: env.DATABASE_PORT_PRODUCTION1,
        DATABASE_USER_PRODUCTION: env.DATABASE_USER_PRODUCTION1,
        DATABASE_PASS_PRODUCTION: env.DATABASE_PASS_PRODUCTION1,
        DATABASE_NAME: env.DATABASE_NAME_TEST1,
        ADMIN_JWT_SECRET: env.ADMIN_JWT_SECRET,
        DOMAIN_URL: env.DOMAIN_URL1,
        DATABASE_SSL: env.DATABASE_SSL,
        AWS_FOLDER: env.AWS_FOLDER1,
        VERCEL_DEPLOY_HOOK: env.VERCEL_DEPLOY_HOOK1,
        VERCEL_DEPLOY_API_TOKEN: env.VERCEL_DEPLOY_API_TOKEN1,
        VERCEL_DEPLOY_APP_FILTER: env.VERCEL_DEPLOY_APP_FILTER1,
        VERCEL_DEPLOY_TEAM_FILTER: env.VERCEL_DEPLOY_TEAM_FILTER1
      }
    },
    {
      name: env.NAME2,
      script: env.SCRIPT,
      args: env.ARGS,
      env: {
        NODE_ENV: env.NAME2,
        HOST_PORT: env.HOST_PORT_TEST2,
        DATABASE_HOST_PRODUCTION: env.DATABASE_HOST_PRODUCTION2, 
        DATABASE_PORT_PRODUCTION: env.DATABASE_PORT_PRODUCTION2,
        DATABASE_USER_PRODUCTION: env.DATABASE_USER_PRODUCTION2,
        DATABASE_PASS_PRODUCTION: env.DATABASE_PASS_PRODUCTION2,
        DATABASE_NAME: env.DATABASE_NAME_TEST2,
        ADMIN_JWT_SECRET: env.ADMIN_JWT_SECRET,
        DOMAIN_URL: env.DOMAIN_URL2,
        DATABASE_SSL: env.DATABASE_SSL,
        AWS_FOLDER: env.AWS_FOLDER2,
        VERCEL_DEPLOY_HOOK: env.VERCEL_DEPLOY_HOOK2,
        VERCEL_DEPLOY_API_TOKEN: env.VERCEL_DEPLOY_API_TOKEN2,
        VERCEL_DEPLOY_APP_FILTER: env.VERCEL_DEPLOY_APP_FILTER2,
        VERCEL_DEPLOY_TEAM_FILTER: env.VERCEL_DEPLOY_TEAM_FILTER2
      }
    },
    {
      name: env.NAME3,
      script: env.SCRIPT,
      args: env.ARGS,
      env: {
        NODE_ENV: env.NAME3,
        HOST_PORT: env.HOST_PORT_TEST3,
        DATABASE_HOST_PRODUCTION: env.DATABASE_HOST_PRODUCTION3, 
        DATABASE_PORT_PRODUCTION: env.DATABASE_PORT_PRODUCTION3,
        DATABASE_USER_PRODUCTION: env.DATABASE_USER_PRODUCTION3,
        DATABASE_PASS_PRODUCTION: env.DATABASE_PASS_PRODUCTION3,
        DATABASE_NAME: env.DATABASE_NAME_TEST3,
        ADMIN_JWT_SECRET: env.ADMIN_JWT_SECRET,
        DOMAIN_URL: env.DOMAIN_URL3,
        DATABASE_SSL: env.DATABASE_SSL,
        AWS_FOLDER: env.AWS_FOLDER3,
        VERCEL_DEPLOY_HOOK: env.VERCEL_DEPLOY_HOOK3,
        VERCEL_DEPLOY_API_TOKEN: env.VERCEL_DEPLOY_API_TOKEN3,
        VERCEL_DEPLOY_APP_FILTER: env.VERCEL_DEPLOY_APP_FILTER3,
        VERCEL_DEPLOY_TEAM_FILTER: env.VERCEL_DEPLOY_TEAM_FILTER3
      }
    },
    {
      name: env.NAME4,
      script: env.SCRIPT,
      args: env.ARGS,
      env: {
        NODE_ENV: env.NAME4,
        HOST_PORT: env.HOST_PORT_TEST4,
        DATABASE_HOST_PRODUCTION: env.DATABASE_HOST_PRODUCTION4, 
        DATABASE_PORT_PRODUCTION: env.DATABASE_PORT_PRODUCTION4,
        DATABASE_USER_PRODUCTION: env.DATABASE_USER_PRODUCTION4,
        DATABASE_PASS_PRODUCTION: env.DATABASE_PASS_PRODUCTION4,
        DATABASE_NAME: env.DATABASE_NAME_TEST4,
        ADMIN_JWT_SECRET: env.ADMIN_JWT_SECRET,
        DOMAIN_URL: env.DOMAIN_URL4,
        DATABASE_SSL: env.DATABASE_SSL,
        AWS_FOLDER: env.AWS_FOLDER4,
        VERCEL_DEPLOY_HOOK: env.VERCEL_DEPLOY_HOOK4,
        VERCEL_DEPLOY_API_TOKEN: env.VERCEL_DEPLOY_API_TOKEN4,
        VERCEL_DEPLOY_APP_FILTER: env.VERCEL_DEPLOY_APP_FILTER4,
        VERCEL_DEPLOY_TEAM_FILTER: env.VERCEL_DEPLOY_TEAM_FILTER4
      }
    },
  ]
});